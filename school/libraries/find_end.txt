Итератор на начало (begin), итератор на символ, следующий за последним (last), итератор на начало искомой последовательности (begin1), итератор на элемент, следующий за последним в искомой последовательности(last2), компоратор(Необязательно).
Возвращает итератор на последнее вхождение последовательности от begin2 до last2 в диапазоне от begin до last. Если такого вхождения нет, возвращает last. Компаратор необходим для сравнения нестандартных типов данных.
Да
bool comp (int a, int b) {
	return a!=b;
};
vector<int>a,b;
int main () {
	for (int i=0; i<16; i++) a.push_back(i%5);
	b.push_back(15); b.push_back(14); b.oush_back(13);
	cout << find(a.begin(), a.end(), b.begin(), b.end())-a.begin() << endl; //Выведет 0
	cout << find(a.begin(), a.end(), b.begin(), b.end(), comp)-a.begin() << endl; //Выведет 13
	return 0;
};
