Итератор на начало (begin), итератор на символ, следующий за последним (last), итератор на первый элемент второй последовательности элементов (begin2), компаратор (Необязаельно).
Проверяет, совпадают ли два диапазона (первый начинается в begin и заканчивается перед last, второй начинается в begin2). Компаратор нужен для сравнения нестандартных типов (например структур).
Да
vector<int>a, b;
void comp(int a, int b) {
	return a<b
};
int main () {
	for (int i=0; i<16; i++) { a.push_back(i); b.push_back(i); };
	cout << equal(a.begin(), a.end(), b.begin()) << endl; //Выведет 1, то есть true
	for (i=0; i<16; i++) b[i]++;
	cout << equal(a.begin(), a.end(), b.begin()) << endl; //Выведет 0, то есть false
	cout << equal(a.begin(), a.end(), b.begin(), comp) << endl; //Выведет 1, то есть true. Почему? В компараторе мы говорим компьютеру считать элементы a и b равными, если a меньше чем b.
	return 0;
};
